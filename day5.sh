# part 1 (holy balls awk is stupid)
# i'm sure this could be refined, but, it finally works, and i spent way too long wrestling with awk
cat input5.txt | gawk '{ if ($0 ~ /\[/) { print ": " $0 } if ($0 ~ /^\s1/) { print "; " $0} if ($0 ~ /^$/) { print ". " $0} if ($0 ~ /^move/) { print ", " $0}}' | sed -e 's/ /./g' | gawk -v foo=1 -F. '{ if ($0~/^:/) { row++;order=0;column=0+0;for (i=4;i<=length($0);i=i+4) { column++;char=substr($0,i,1);if (char==".") continue;if(si[column]==0) {si[column]=1} else {si[column]++};stack[column+0][si[column]+0]=char}} if ($0~/^,/) { if (foo<=1) { for (i=1;i<=length(stack);i++) { for (y=1;y<=length(stack);y++) { z=0; for (x=length(stack[y]);x>=1;x--) {z++;newstack[y][z] = stack[y][x]}}};foo++} ;count=$3;from=$5;to=$7;last=si[from]; for (i=count;i>=1;i--) { newstack[to][length(newstack[to])+1]=newstack[from][length(newstack[from])];delete newstack[from][length(newstack[from])] }}} END { for (y=1;y<=length(newstack);y++) printf("%s",newstack[y][length(newstack[y])]);print "" }'

# part 2
cat input5.txt | gawk '{ if ($0 ~ /\[/) { print ": " $0 } if ($0 ~ /^\s1/) { print "; " $0} if ($0 ~ /^$/) { print ". " $0} if ($0 ~ /^move/) { print ", " $0}}' | sed -e 's/ /./g' | gawk -v foo=1 -F. '{ if ($0~/^:/) { row++;order=0;column=0+0;for (i=4;i<=length($0);i=i+4) { column++;char=substr($0,i,1);if (char==".") continue;if(si[column]==0) {si[column]=1} else {si[column]++};stack[column+0][si[column]+0]=char}} if ($0~/^,/) { if (foo<=1) { for (i=1;i<=length(stack);i++) { for (y=1;y<=length(stack);y++) { z=0; for (x=length(stack[y]);x>=1;x--) {z++;newstack[y][z] = stack[y][x]}}};foo++} ;count=$3;from=$5;to=$7;last=si[from];tolen=length(newstack[to]); for (i=count;i>=1;i--) { newstack[to][tolen+i]=newstack[from][length(newstack[from])];delete newstack[from][length(newstack[from])]}}} END { for (y=1;y<=length(newstack);y++) printf("%s",newstack[y][length(newstack[y])]);print "" }'
